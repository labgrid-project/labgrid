# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import labgrid_coordinator_pb2 as labgrid__coordinator__pb2


class CoordinatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ClientStream = channel.stream_stream(
                '/labgrid.Coordinator/ClientStream',
                request_serializer=labgrid__coordinator__pb2.ClientInMessage.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.ClientOutMessage.FromString,
                )
        self.ExporterStream = channel.stream_stream(
                '/labgrid.Coordinator/ExporterStream',
                request_serializer=labgrid__coordinator__pb2.ExporterInMessage.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.ExporterOutMessage.FromString,
                )
        self.AddPlace = channel.unary_unary(
                '/labgrid.Coordinator/AddPlace',
                request_serializer=labgrid__coordinator__pb2.AddPlaceRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.AddPlaceResponse.FromString,
                )
        self.DeletePlace = channel.unary_unary(
                '/labgrid.Coordinator/DeletePlace',
                request_serializer=labgrid__coordinator__pb2.DeletePlaceRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.DeletePlaceResponse.FromString,
                )
        self.GetPlaces = channel.unary_unary(
                '/labgrid.Coordinator/GetPlaces',
                request_serializer=labgrid__coordinator__pb2.GetPlacesRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.GetPlacesResponse.FromString,
                )
        self.AddPlaceAlias = channel.unary_unary(
                '/labgrid.Coordinator/AddPlaceAlias',
                request_serializer=labgrid__coordinator__pb2.AddPlaceAliasRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.AddPlaceAliasResponse.FromString,
                )
        self.DeletePlaceAlias = channel.unary_unary(
                '/labgrid.Coordinator/DeletePlaceAlias',
                request_serializer=labgrid__coordinator__pb2.DeletePlaceAliasRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.DeletePlaceAliasResponse.FromString,
                )
        self.SetPlaceTags = channel.unary_unary(
                '/labgrid.Coordinator/SetPlaceTags',
                request_serializer=labgrid__coordinator__pb2.SetPlaceTagsRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.SetPlaceTagsResponse.FromString,
                )
        self.SetPlaceComment = channel.unary_unary(
                '/labgrid.Coordinator/SetPlaceComment',
                request_serializer=labgrid__coordinator__pb2.SetPlaceCommentRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.SetPlaceCommentResponse.FromString,
                )
        self.AddPlaceMatch = channel.unary_unary(
                '/labgrid.Coordinator/AddPlaceMatch',
                request_serializer=labgrid__coordinator__pb2.AddPlaceMatchRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.AddPlaceMatchResponse.FromString,
                )
        self.DeletePlaceMatch = channel.unary_unary(
                '/labgrid.Coordinator/DeletePlaceMatch',
                request_serializer=labgrid__coordinator__pb2.DeletePlaceMatchRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.DeletePlaceMatchResponse.FromString,
                )
        self.AcquirePlace = channel.unary_unary(
                '/labgrid.Coordinator/AcquirePlace',
                request_serializer=labgrid__coordinator__pb2.AcquirePlaceRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.AcquirePlaceResponse.FromString,
                )
        self.ReleasePlace = channel.unary_unary(
                '/labgrid.Coordinator/ReleasePlace',
                request_serializer=labgrid__coordinator__pb2.ReleasePlaceRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.ReleasePlaceResponse.FromString,
                )
        self.AllowPlace = channel.unary_unary(
                '/labgrid.Coordinator/AllowPlace',
                request_serializer=labgrid__coordinator__pb2.AllowPlaceRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.AllowPlaceResponse.FromString,
                )
        self.CreateReservation = channel.unary_unary(
                '/labgrid.Coordinator/CreateReservation',
                request_serializer=labgrid__coordinator__pb2.CreateReservationRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.CreateReservationResponse.FromString,
                )
        self.CancelReservation = channel.unary_unary(
                '/labgrid.Coordinator/CancelReservation',
                request_serializer=labgrid__coordinator__pb2.CancelReservationRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.CancelReservationResponse.FromString,
                )
        self.PollReservation = channel.unary_unary(
                '/labgrid.Coordinator/PollReservation',
                request_serializer=labgrid__coordinator__pb2.PollReservationRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.PollReservationResponse.FromString,
                )
        self.GetReservations = channel.unary_unary(
                '/labgrid.Coordinator/GetReservations',
                request_serializer=labgrid__coordinator__pb2.GetReservationsRequest.SerializeToString,
                response_deserializer=labgrid__coordinator__pb2.GetReservationsResponse.FromString,
                )


class CoordinatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ClientStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExporterStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPlace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePlace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaces(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPlaceAlias(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePlaceAlias(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPlaceTags(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPlaceComment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPlaceMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePlaceMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcquirePlace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleasePlace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AllowPlace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateReservation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelReservation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PollReservation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReservations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CoordinatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ClientStream': grpc.stream_stream_rpc_method_handler(
                    servicer.ClientStream,
                    request_deserializer=labgrid__coordinator__pb2.ClientInMessage.FromString,
                    response_serializer=labgrid__coordinator__pb2.ClientOutMessage.SerializeToString,
            ),
            'ExporterStream': grpc.stream_stream_rpc_method_handler(
                    servicer.ExporterStream,
                    request_deserializer=labgrid__coordinator__pb2.ExporterInMessage.FromString,
                    response_serializer=labgrid__coordinator__pb2.ExporterOutMessage.SerializeToString,
            ),
            'AddPlace': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPlace,
                    request_deserializer=labgrid__coordinator__pb2.AddPlaceRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.AddPlaceResponse.SerializeToString,
            ),
            'DeletePlace': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePlace,
                    request_deserializer=labgrid__coordinator__pb2.DeletePlaceRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.DeletePlaceResponse.SerializeToString,
            ),
            'GetPlaces': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaces,
                    request_deserializer=labgrid__coordinator__pb2.GetPlacesRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.GetPlacesResponse.SerializeToString,
            ),
            'AddPlaceAlias': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPlaceAlias,
                    request_deserializer=labgrid__coordinator__pb2.AddPlaceAliasRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.AddPlaceAliasResponse.SerializeToString,
            ),
            'DeletePlaceAlias': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePlaceAlias,
                    request_deserializer=labgrid__coordinator__pb2.DeletePlaceAliasRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.DeletePlaceAliasResponse.SerializeToString,
            ),
            'SetPlaceTags': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPlaceTags,
                    request_deserializer=labgrid__coordinator__pb2.SetPlaceTagsRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.SetPlaceTagsResponse.SerializeToString,
            ),
            'SetPlaceComment': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPlaceComment,
                    request_deserializer=labgrid__coordinator__pb2.SetPlaceCommentRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.SetPlaceCommentResponse.SerializeToString,
            ),
            'AddPlaceMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPlaceMatch,
                    request_deserializer=labgrid__coordinator__pb2.AddPlaceMatchRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.AddPlaceMatchResponse.SerializeToString,
            ),
            'DeletePlaceMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePlaceMatch,
                    request_deserializer=labgrid__coordinator__pb2.DeletePlaceMatchRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.DeletePlaceMatchResponse.SerializeToString,
            ),
            'AcquirePlace': grpc.unary_unary_rpc_method_handler(
                    servicer.AcquirePlace,
                    request_deserializer=labgrid__coordinator__pb2.AcquirePlaceRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.AcquirePlaceResponse.SerializeToString,
            ),
            'ReleasePlace': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleasePlace,
                    request_deserializer=labgrid__coordinator__pb2.ReleasePlaceRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.ReleasePlaceResponse.SerializeToString,
            ),
            'AllowPlace': grpc.unary_unary_rpc_method_handler(
                    servicer.AllowPlace,
                    request_deserializer=labgrid__coordinator__pb2.AllowPlaceRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.AllowPlaceResponse.SerializeToString,
            ),
            'CreateReservation': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateReservation,
                    request_deserializer=labgrid__coordinator__pb2.CreateReservationRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.CreateReservationResponse.SerializeToString,
            ),
            'CancelReservation': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelReservation,
                    request_deserializer=labgrid__coordinator__pb2.CancelReservationRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.CancelReservationResponse.SerializeToString,
            ),
            'PollReservation': grpc.unary_unary_rpc_method_handler(
                    servicer.PollReservation,
                    request_deserializer=labgrid__coordinator__pb2.PollReservationRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.PollReservationResponse.SerializeToString,
            ),
            'GetReservations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReservations,
                    request_deserializer=labgrid__coordinator__pb2.GetReservationsRequest.FromString,
                    response_serializer=labgrid__coordinator__pb2.GetReservationsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'labgrid.Coordinator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Coordinator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ClientStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/labgrid.Coordinator/ClientStream',
            labgrid__coordinator__pb2.ClientInMessage.SerializeToString,
            labgrid__coordinator__pb2.ClientOutMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExporterStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/labgrid.Coordinator/ExporterStream',
            labgrid__coordinator__pb2.ExporterInMessage.SerializeToString,
            labgrid__coordinator__pb2.ExporterOutMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddPlace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/AddPlace',
            labgrid__coordinator__pb2.AddPlaceRequest.SerializeToString,
            labgrid__coordinator__pb2.AddPlaceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePlace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/DeletePlace',
            labgrid__coordinator__pb2.DeletePlaceRequest.SerializeToString,
            labgrid__coordinator__pb2.DeletePlaceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlaces(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/GetPlaces',
            labgrid__coordinator__pb2.GetPlacesRequest.SerializeToString,
            labgrid__coordinator__pb2.GetPlacesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddPlaceAlias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/AddPlaceAlias',
            labgrid__coordinator__pb2.AddPlaceAliasRequest.SerializeToString,
            labgrid__coordinator__pb2.AddPlaceAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePlaceAlias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/DeletePlaceAlias',
            labgrid__coordinator__pb2.DeletePlaceAliasRequest.SerializeToString,
            labgrid__coordinator__pb2.DeletePlaceAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPlaceTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/SetPlaceTags',
            labgrid__coordinator__pb2.SetPlaceTagsRequest.SerializeToString,
            labgrid__coordinator__pb2.SetPlaceTagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPlaceComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/SetPlaceComment',
            labgrid__coordinator__pb2.SetPlaceCommentRequest.SerializeToString,
            labgrid__coordinator__pb2.SetPlaceCommentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddPlaceMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/AddPlaceMatch',
            labgrid__coordinator__pb2.AddPlaceMatchRequest.SerializeToString,
            labgrid__coordinator__pb2.AddPlaceMatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePlaceMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/DeletePlaceMatch',
            labgrid__coordinator__pb2.DeletePlaceMatchRequest.SerializeToString,
            labgrid__coordinator__pb2.DeletePlaceMatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcquirePlace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/AcquirePlace',
            labgrid__coordinator__pb2.AcquirePlaceRequest.SerializeToString,
            labgrid__coordinator__pb2.AcquirePlaceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReleasePlace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/ReleasePlace',
            labgrid__coordinator__pb2.ReleasePlaceRequest.SerializeToString,
            labgrid__coordinator__pb2.ReleasePlaceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AllowPlace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/AllowPlace',
            labgrid__coordinator__pb2.AllowPlaceRequest.SerializeToString,
            labgrid__coordinator__pb2.AllowPlaceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateReservation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/CreateReservation',
            labgrid__coordinator__pb2.CreateReservationRequest.SerializeToString,
            labgrid__coordinator__pb2.CreateReservationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelReservation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/CancelReservation',
            labgrid__coordinator__pb2.CancelReservationRequest.SerializeToString,
            labgrid__coordinator__pb2.CancelReservationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PollReservation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/PollReservation',
            labgrid__coordinator__pb2.PollReservationRequest.SerializeToString,
            labgrid__coordinator__pb2.PollReservationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReservations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/labgrid.Coordinator/GetReservations',
            labgrid__coordinator__pb2.GetReservationsRequest.SerializeToString,
            labgrid__coordinator__pb2.GetReservationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
